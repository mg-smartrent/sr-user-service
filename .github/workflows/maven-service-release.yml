name: MicroService release
env:
  MVN_SERVER_ID: "github"
  MVN_PACKAGE_REPO_URL: "https://maven.pkg.github.com/mg-smartrent/sr-artifactory"
  MVN_DOCKER_FILE_REPO: "docker.io/maimas/sr-user-service"
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      #---------------------------------------------------------------
      #---------------------Run on all branches-----------------------
      #---------------------------------------------------------------

      - name: Setup Maven settings-xml
        uses: whelk-io/maven-settings-xml-action@v6
        with:
          # Updates the settings.xml from $HOME/.m2 with the server and repo info.
          repositories: '[{ "id": "${MVN_SERVER_ID}", "url": "${MVN_PACKAGE_REPO_URL}" }]'
          servers: '[{ "id": "${MVN_SERVER_ID}", "username": "${{ secrets.SR_GIT_USERNAME }}", "password": "${{ secrets.SR_GIT_PASSWORD }}" }]'

      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ${MVN_SERVER_ID} # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: $HOME/.m2 # location for the settings.xml file

      - name: Build
        run: mvn -B package --file pom.xml -Dskip.unit.tests=true -Dskip.integration.tests=true

      - name: Run Unit Tests
        run: mvn test -Dskip.unit.tests=false -Dskip.integration.tests=true

      - name: Run Integration Tests
        run: mvn test -Dskip.unit.tests=false -Dskip.integration.tests=true

      #---------------------------------------------------------------
      #---------------------Run ony on master branch------------------
      #---------------------------------------------------------------

      - name: Build & Release Docker
        if: github.ref == 'refs/heads/master'
        run: mvn -B -f pom.xml dockerfile:build dockerfile:push -Ddockerfile.skip=false -Ddockerfile.repository=${{ env.MVN_DOCKER_FILE_REPO }} -Ddockerfile.username=${{ secrets.DOCKER_USERNAME }} -Ddockerfile.password=${{ secrets.DOCKER_PASSWORD }}